[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 13.0.1)
[debug] Load.defaultLoad until apply took 369.3592ms
[debug]           Load.loadUnit: plugins took 92.869ms
[debug]           Load.loadUnit: defsScala took 0.4124ms
[debug] [Loading] Scanning directory C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 49.9739 ms
[debug]               Load.resolveProject(zd5_6-build) took 65.6874ms
[debug]             Load.loadTransitive: finalizeProject(Project(id zd5_6-build, base: C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6\project, plugins: List(<none>))) took 203.6978ms
[debug] [Loading] Done in C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6\project, returning: (zd5_6-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 237.8982ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.362ms
[debug]         Load.loadUnit(file:/C:/Users/Kamil/Desktop/teoria%20współbieżności/zd5_6/project/, ...) took 346.4363ms
[debug]       Load.apply: load took 520.8471ms
[debug]       Load.apply: resolveProjects took 9.2181ms
[debug]       Load.apply: finalTransforms took 102.3282ms
[debug]       Load.apply: config.delegates took 6.4858ms
[debug]       Load.apply: Def.make(settings)... took 1188.7206ms
[debug]       Load.apply: structureIndex took 154.504ms
[debug]       Load.apply: mkStreams took 1.776ms
[info] loading project definition from C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5281.3912ms
[debug]     Load.loadUnit: defsScala took 0.0046ms
[debug] [Loading] Scanning directory C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6
[debug]       Load.loadUnit: mkEval took 7.9419ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9776 ms
[info] loading settings for project zd5_6 from build.sbt ...
[debug]         Load.resolveProject(zd5_6) took 3.1376ms
[debug]       Load.loadTransitive: finalizeProject(Project(id zd5_6, base: C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6, plugins: List(<none>))) took 5.777ms
[debug] [Loading] Done in C:\Users\Kamil\Desktop\teoria współbieżności\zd5_6, returning: (zd5_6)
[debug]     Load.loadUnit: loadedProjectsRaw took 2351.8852ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.8923ms
[debug]   Load.loadUnit(file:/C:/Users/Kamil/Desktop/teoria%20współbieżności/zd5_6/, ...) took 7651.4161ms
[debug] Load.apply: load took 7674.8706ms
[debug] Load.apply: resolveProjects took 0.145ms
[debug] Load.apply: finalTransforms took 14.9989ms
[debug] Load.apply: config.delegates took 0.413ms
[debug] Load.apply: Def.make(settings)... took 76.7878ms
[debug] Load.apply: structureIndex took 25.1439ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to zd5_6 (in build file:/C:/Users/Kamil/Desktop/teoria%20współbieżności/zd5_6/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-6e799a99a2e7d35430ee
